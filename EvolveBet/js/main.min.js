let activeLanguage=document.querySelector(".other-language__active"),activeLanguageimage=document.querySelector(".other-language__active img"),allLanguage=document.querySelector(".other-language__all"),allLanguageName=document.querySelectorAll(".other-language__all a");function OpenAllLanguages(){allLanguage.classList.toggle("open")}activeLanguage.addEventListener("click",OpenAllLanguages),allLanguageName.forEach(e=>{e.addEventListener("click",e=>{e.path.length>14&&(activeLanguageimage.src=e.path[1].childNodes[1].src,allLanguage.classList.remove("open"))})});let planLineWeek=document.querySelectorAll(".plana-week__line ul li");planLineWeek.forEach((e,t)=>{e.addEventListener("click",()=>{[...planLineWeek].splice(0,t+1).forEach(e=>e.classList.add("active")),[...planLineWeek].splice(t+1).forEach(e=>e.classList.remove("active")),[...document.getElementsByClassName("week")].forEach(e=>e.remove());let c=document.createElement("p");c.classList.add("week"),e.appendChild(c),c.textContent=t+1+" week"})});let planChangePrecent=document.querySelector(".planb .plana-deposit__image");const containerUl=document.querySelector(".planb-mounth__count ul");function Tabs(){let e=[],t=function(t){t.preventDefault(),function(){let t=document.querySelectorAll("[data-tab]");for(let c=0;c<t.length;c++){t[c].classList.remove("active");let a=t[c].getAttribute("data-tab");document.getElementById(a).classList.remove("active"),t[c].textContent=e[c]}}(),t.target.classList.add("active"),t.target.textContent=t.target.textContent+" selected";let c=t.currentTarget.getAttribute("data-tab");document.getElementById(c).classList.add("active")};!function(){let c=document.querySelectorAll("[data-tab]");for(let a=0;a<c.length;a++)e.push(c[a].textContent),c[a].addEventListener("click",t)}()}containerUl.addEventListener("click",(function({target:e}){if(e.classList.contains("active"))document.querySelectorAll(".planb-mounth__count ul li").forEach(t=>t.classList.toggle("active",t===e));else{document.querySelectorAll(".planb-mounth__count ul li").forEach(t=>t.classList.toggle("active",t===e));let t=this.querySelector(".planb-mounth__count ul li.active .percent").textContent;planChangePrecent.setAttribute("data-percent",t)}}));let connectTabs=new Tabs;document.addEventListener("click",e=>{e.preventDefault(),e.target.dataset.text&&(document.querySelectorAll(".tabs-button a").forEach(e=>{e.classList.remove("active")}),e.target.classList.add("active"),document.querySelectorAll(".tabs-form").forEach(t=>{t.classList.toggle("active",t.id===e.target.getAttribute("href").slice(1))}))});let switchFixCourse=document.querySelector(".create-elem__switch span");switchFixCourse.addEventListener("click",()=>{switchFixCourse.classList.toggle("on"),switchFixCourse.classList.contains("on")?switchFixCourse.textContent="On":switchFixCourse.textContent="Off"});const CirclePercentNumber=document.querySelector(".progress-plan p.progress-percent span"),CircleProgressNumber=document.querySelector(".box-progress__text p span"),circle=document.querySelector(".box-progress__circle circle.first"),CircleGreenProgressNumber=document.querySelector(".box.green .box-progress__text p span"),circleGreen=document.querySelector(".box.green .box-progress__circle circle.first");function setProgressCircle(e,t,c){const a=t.r.baseVal.value,n=2*Math.PI*a;t.style.strokeDasharray=`${n} ${n}`,t.style.strokeDashoffset=n;const r=n-e/c*n;t.style.strokeDashoffset=r}CircleProgressNumber.textContent=CirclePercentNumber.textContent+"%",setProgressCircle(CirclePercentNumber.textContent,circle,150),setProgressCircle(CircleGreenProgressNumber.textContent,circleGreen,200);
//# sourceMappingURL=../sourcemaps/main.min.js.map
